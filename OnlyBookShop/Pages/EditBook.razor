@page "/editbook/{id:int}"

@using OnlyBookShop.Data
@inject IDbContextFactory<BookDbContext> BookDbFactory
@inject IJSRuntime JS

@if (editModel.Id != -1)
{
    <h3>EditBook @Id</h3>

    <EditForm Model="@editModel" OnValidSubmit="@SaveData">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="container vertical-form">
            <div class="row">
                <div class="col-md-6">
                    <label for="bookId" class="form-label">Book ID</label>
                    <select class="form-select" id="bookId" aria-label="Default select example">
                        <option selected value="@Id">@Id</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <strong><label for="name" class="form-label">Name</label></strong>
                    <InputText class="form-control" id="name" placeholder="ABC" @bind-Value="@editModel.Name" />
                </div>
                <div class="col-md-6">
                    <strong><label for="description" class="form-label">Description</label></strong>
                    <InputTextArea class="form-control" id="description" rows="3" @bind-Value="@editModel.Description" />
                </div>
                <div class="col-md-6">
                    <strong><label for="author" class="form-label">Author</label></strong>
                    <InputText class="form-control" type="text" id="author" placeholder="John Cena" @bind-Value="@editModel.Author" />
                </div>
                <div class="col-md-6">
                    <strong><label for="year" class="form-label">Year</label></strong>
                    <InputNumber class="form-control" type="number" id="year" placeholder="0" @bind-Value="@editModel.Year" />
                </div>
                <div class="col-md-6">
                    <strong><label for="price" class="form-label">Price (Baht)</label></strong>
                    <InputNumber class="form-control" type="number" id="price" placeholder="0" @bind-Value="@editModel.Price" />
                </div>
                <div class="col-md-6">
                    <strong><label for="picUrl" class="form-label">Pic URL</label></strong>
                    <InputText class="form-control" type="text" id="picUrl" placeholder="www.abc.com/abc.jpg" aria-label="URL Picture" @bind-Value="@editModel.Url" />
                </div>
            </div>         
        </div>
        <div style="margin-top: 10px; display: flex; justify-content:center">
            <button type="button" class="btn btn-secondary button-lg" style="margin-right: 5px" onclick="history.back()">Cancel</button>
            <button type="submit" class="btn btn-success button-lg">Update Book</button>
        </div>
    </EditForm>


    <EditForm Model="@editModel" OnValidSubmit="@SaveData">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="book-container">
            <strong>Book ID: </strong>
            <select class="form-select" aria-label="Default select example">
                <option selected value="@Id">@Id</option>
            </select><br>
            <strong>Name: </strong><InputText class="form-control" id="name" placeholder="ABC" @bind-Value="@editModel.Name" /><br>
            <strong>Description: </strong><InputTextArea class="form-control" id="description" rows="3" @bind-Value="@editModel.Description" /><br>
            <strong>Author: </strong><InputText class="form-control" type="text" id="author" placeholder="John Cena" @bind-Value="@editModel.Author" /><br>
            <strong>Year: </strong><InputNumber class="form-control" type="number" id="year" placeholder="0" @bind-Value="@editModel.Year" /><br>
            <strong>Price (Baht): </strong><InputNumber class="form-control" type="number" id="price" placeholder="0" @bind-Value="@editModel.Price" /><br>
            <strong>Pic URL: </strong><InputText class="form-control" type="text" id="picUrl" placeholder="www.abc.com/abc.jpg" aria-label="URL Picture" @bind-Value="@editModel.Url" />        
        </div>
        <div style="margin-top: 10px; display: flex; justify-content:center">
            <button type="button" class="btn btn-secondary button-sm" style="margin-right: 5px" onclick="history.back()">Cancel</button>
            <button type="subm" class="btn btn-success button-sm" >Update Book</button>
        </div>
    </EditForm>
} else
{
    <h1>Id is invalid or Not have data</h1>
}


@code {
    [Parameter]
    public int Id { get; set; }

    private BookData editModel = new BookData();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        using var dbcontext = BookDbFactory.CreateDbContext();
        var data = dbcontext.BookDatas.SingleOrDefault(w => w.Id == Id);
        if (data is not null)
        {
            editModel = new BookData
                {
                    Id = data.Id,
                    Name = data.Name,
                    Description = data.Description,
                    Author = data.Author,
                    Year = data.Year,
                    Price = data.Price,
                    Url = data.Url
                };
        } else
        {
            editModel = new BookData
                {
                    Id = -1
                };
        }
    }

    private async void SaveData()
    {
        using var dbcontext = BookDbFactory.CreateDbContext();
        var data = dbcontext.BookDatas.SingleOrDefault(w => w.Id == Id);
        if (data is not null)
        {
            data.Name = editModel.Name;
            data.Description = editModel.Description;
            data.Author = editModel.Author;
            data.Year = editModel.Year;
            data.Price = editModel.Price;
            data.Url = editModel.Url;
            dbcontext.SaveChanges();
        }
        await JS.InvokeVoidAsync("history.back");
    }
}
